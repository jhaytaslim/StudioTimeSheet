import React from 'react';
import PropTypes from 'prop-types'
import {Button,Card,Checkbox,Form,Grid,Icon,Input,Label,TextArea,Segment,} from 'semantic-ui-react'

const TimeSheet=({OnClear,OnNext,OnChange,Detail,WorkType,SetWorkType})=>(
    <Form onSubmit={this.onSubmit}>
                <Form.Field error={!!errors.Email}>
                    <div >
                        {/* <Input focus name='Email' placeholder='Email : artist@gener8.com'
                            onChange={e => OnChange(e)}
                            value={Detail.Email} /> */}
                        <input type="Email" 
                            id="Email" 
                            name="Email"
                            placeholder="jhay@example.com"
                            value={Detail.Email} 
                            onChange={e => OnChange(e)}
                    /> 
                    </div>
                    
                    {errors.Email && <InlineError text={errors.Email}/>}
                </Form.Field>
                <Form.Field error={!!errors.password}>
                    <label htmlFor="password">password</label>
                    <input type="password" 
                            id="password" 
                            name="password"
                            placeholder="make it secure"
                            value={data.password}
                            onChange={this.onChange}
                    />
                    {errors.password && <InlineError text={errors.password}/>} 
                </Form.Field>
                <Button primary>Login</Button>
            </Form>
    
    <Segment textAlign='center' inverted color='grey'>
        <div className="border inner">
            <Input focus name='Email' placeholder='Email : artist@gener8.com'
                onChange={e => OnChange(e)}
                value={Detail.Email} />
        </div>
        <div>
            <Input name='TimeSpent' placeholder='Time : 12 hours 15 mins'
                onChange={e => OnChange(e)}
                value={Detail.TimeSpent} />
        </div>
        <div>
            <TextArea autoHeight name='Message' placeholder='Message (optional): '
                onChange={e => OnChange(e)} value={Detail.Message} style={{ minHeight: 100 }} />
        </div>
        <Card>
            {
                WorkType.length>0 ? WorkType.map((f,i) =>{
                    return( 
                        <div key={i}>
                            <Label onClick={e=>{SetWorkType(f)}}>
                                {f}
                                {/* <Label.Detail>214</Label.Detail> */}
                            </Label>
                           {
                               Detail.WorkType===f?<Icon name='checkmark' color='green'/>:""
                           } 
                        </div>
                         )
                        }):" "
            }
        </Card>
        <br/>
        <div>
            <Segment size='big' textAlign='center' inverted color='blue'>
                <Button onClick={e=>{OnClear(e)}}>Clear</Button>
                <Button onClick={e=>{OnNext(e)}}>Next</Button>
            </Segment>
            
        </div>
    </Segment>
)

TimeSheet.propTypes = {
    OnClear: PropTypes.func.isRequired,
    OnNext: PropTypes.func.isRequired,
    OnChange:PropTypes.func.isRequired,
}

export default TimeSheet